-- Create middleware_sub_requests table
CREATE TABLE IF NOT EXISTS middleware_sub_requests
(
   id            BIGINT          NOT NULL AUTO_INCREMENT,
   bid           VARCHAR(255)    NOT NULL,
   mid           VARCHAR(255),
   kaid          VARCHAR(255)    NOT NULL,
   eid           VARCHAR(255)    NOT NULL,
   awsid         VARCHAR(255),
   ebid          VARCHAR(255),
   did           VARCHAR(255),
   aid           VARCHAR(255)    NOT NULL,
   aname         VARCHAR(255)    NOT NULL,
   rid           VARCHAR(255)    NOT NULL,
   sid           VARCHAR(255)    NOT NULL,
   chnl          VARCHAR(255)    NOT NULL,
   atype         VARCHAR(255)    NOT NULL,
   plat          VARCHAR(255)    NOT NULL,
   idur          INT             NOT NULL,
   tdur          INT             NOT NULL,
   rip           VARCHAR(255),
   ts            TIMESTAMP       DEFAULT CURRENT_TIMESTAMP NOT NULL,
   dm            VARCHAR(255),
   os            VARCHAR(255),
   ua            VARCHAR(255),
   svcid         VARCHAR(255)    NOT NULL,
   psvcid        VARCHAR(255)    NOT NULL,
   fid           VARCHAR(255),
   stype         VARCHAR(255)    NOT NULL,
   aver          VARCHAR(255),
   kuid          VARCHAR(255),
   country       VARCHAR(2),
   region        VARCHAR(10),
   city          VARCHAR(255),
   zip           VARCHAR(32),
   lat           DECIMAL(8,5),
   lon           DECIMAL(8,5),
   dmacd         INT,
   areacd        VARCHAR(3),
   predur        INT             DEFAULT 0 NOT NULL,
   exdur         INT             DEFAULT 0 NOT NULL,
   prsdur        INT             DEFAULT 0 NOT NULL,
   postdur       INT             DEFAULT 0 NOT NULL,
   sdktype       VARCHAR(50),
   sdkversion    VARCHAR(50),
   opstatus      INT,
   httpcode      INT,
   errmsg        VARCHAR(4095),
   errstack_var  VARCHAR(8095),
   errstack      MEDIUMTEXT,
   mfbaseid      VARCHAR(255),
   mfaid         VARCHAR(255),
   mfaname       VARCHAR(255),
   svcgroup      VARCHAR(255),
   psvcgroup     VARCHAR(255),
   rver          VARCHAR(50),
   svcver        VARCHAR(50),
   reqmapdur     INT,
   respmapdur    INT,
   oname         VARCHAR(255),
   omethod       VARCHAR(50),
   svctype       VARCHAR(100),
   contype       VARCHAR(100),
   xmode         VARCHAR(100)    DEFAULT 'online',
   sessiontype   VARCHAR(50) COMMENT 'Type of session, interactive/non-interactive etc',
   trecords      INT COMMENT 'Total Records- Total number of records downloaded/uploaded during sync service call',
   reqtype       VARCHAR(50) COMMENT 'Request Type- Type of request from the device',
   reqbytes      INT COMMENT 'Request Bytes- Transaction request data in bytes',
   respbytes     INT COMMENT 'Response Bytes- Transaction response data in bytes',
   reqprsdur     INT COMMENT 'Request Data Processing Duration- Time taken to parse the data and convert to JSON for a request',
   respprsdur    INT COMMENT 'Response Data Processing Duration- Time taken to parse the data and convert to JSON for a response',
   incnfdur      INT COMMENT 'Interceptor Conflict Duration- Time taken to execute built-in interceptor logic for conflicts in milliseconds',
   cnfcnt        INT COMMENT 'Conflict Count- Number of conflicts occured during sync service call',
   iserror       VARCHAR(10) COMMENT 'True if any error occurs during sync service call, otherwise false',
   PRIMARY KEY pk_middleware_sub_requests(id)
);


-- Create api_sub_requests table
CREATE TABLE IF NOT EXISTS api_sub_requests
(
   id            BIGINT          NOT NULL AUTO_INCREMENT,
   bid           VARCHAR(255)    NOT NULL,
   mid           VARCHAR(255),
   kaid          VARCHAR(255)    NOT NULL,
   eid           VARCHAR(255)    NOT NULL,
   awsid         VARCHAR(255),
   ebid          VARCHAR(255),
   aid           VARCHAR(255),
   aname         VARCHAR(255),
   rid           VARCHAR(255)    NOT NULL,
   idur          INT             NOT NULL,
   tdur          INT             NOT NULL,
   rip           VARCHAR(255),
   ts            TIMESTAMP       DEFAULT CURRENT_TIMESTAMP NOT NULL,
   svcid         VARCHAR(255)    NOT NULL,
   psvcid         VARCHAR(255)    NOT NULL,
   stype         VARCHAR(255)    NOT NULL,
   country       VARCHAR(2),
   region        VARCHAR(10),
   city          VARCHAR(255),
   zip           VARCHAR(32),
   lat           DECIMAL(8,5),
   lon           DECIMAL(8,5),
   dmacd         INT,
   areacd        VARCHAR(3),
   predur        INT             DEFAULT 0 NOT NULL,
   exdur         INT             DEFAULT 0 NOT NULL,
   prsdur        INT             DEFAULT 0 NOT NULL,
   postdur       INT             DEFAULT 0 NOT NULL,
   sdktype       VARCHAR(50)     NOT NULL,
   sdkversion    VARCHAR(50),
   opstatus      INT,
   httpcode      INT,
   errmsg        VARCHAR(4095),
   errstack_var  VARCHAR(8095),
   errstack      MEDIUMTEXT,
   mfaid         VARCHAR(255),
   mfbaseid      VARCHAR(255),
   mfaname       VARCHAR(255),
   svcgroup      VARCHAR(255),
   psvcgroup     VARCHAR(255),
   svcver        VARCHAR(50),
   rver          VARCHAR(50),
   reqmapdur     INT,
   respmapdur    INT,
   oname         VARCHAR(255),
   omethod       VARCHAR(50),
   svctype       VARCHAR(100),
   contype       VARCHAR(100),
   trecords      INT COMMENT 'Total Records- Total number of records downloaded/uploaded during sync service call',
   reqtype       VARCHAR(50) COMMENT 'Request Type- Type of request from the device',
   reqbytes      INT COMMENT 'Request Bytes- Transaction request data in bytes',
   respbytes     INT COMMENT 'Response Bytes- Transaction response data in bytes',
   reqprsdur     INT COMMENT 'Request Data Processing Duration- Time taken to parse the data and convert to JSON for a request',
   respprsdur    INT COMMENT 'Response Data Processing Duration- Time taken to parse the data and convert to JSON for a response',
   incnfdur      INT COMMENT 'Interceptor Conflict Duration- Time taken to execute built-in Interceptor logic for conflicts in milliseconds',
   cnfcnt        INT COMMENT 'Conflicts Count- Number of Conflicts occured during sync service call',
   iserror       VARCHAR(10) COMMENT 'True if any error occurs during sync service call, otherwe false',
   PRIMARY KEY pk_api_sub_requests(id)
   );

-- Creating view for middleware_sub_requests
CREATE OR REPLACE VIEW vw_middleware_sub_requests
AS
SELECT m.kaid,
       m.eid AS environmentid,
       m.awsid,
       m.ebid,
       m.did AS deviceid,
       m.aid AS appid,
       m.aname AS appname,
	   m.aver AS appversion,
       m.rid AS requestid,
       m.sid AS sessionid,
       CASE
         WHEN m.chnl = 'mobile' THEN 'Mobile'
         WHEN m.chnl = 'tablet' THEN 'Tablet'
         WHEN m.chnl = 'desktop' THEN 'Desktop'
         WHEN m.chnl = 'ipod' THEN 'Ipod'
         WHEN m.chnl = 'watch' THEN 'Watch'
         WHEN m.chnl = 'iot' THEN 'IoT'
         ELSE ' '
       END AS channel,
       CASE
         WHEN m.atype = 'hybrid' THEN 'Hybrid'
         WHEN m.atype = 'native' THEN 'Native'
         WHEN m.atype = 'mixedmode' THEN 'Mixed-Mode'
         WHEN m.atype = 'spa' THEN 'SPA'
         WHEN m.atype = 'mobileweb' THEN 'Mobile Web'
         ELSE ' '
       END AS apptype,
       CASE
         WHEN m.plat = 'ios' THEN 'iOS'
         WHEN m.plat = 'android' THEN 'Android'
         WHEN m.plat = 'blackberry' THEN 'Blackberry'
         WHEN m.plat = 'windows' THEN 'Windows'
         WHEN m.plat = 'j2me' THEN 'j2me'
         WHEN m.plat = 'iot' THEN 'IoT'
         ELSE ' '
       END AS platform,
       m.idur,
       m.tdur,
       m.predur,
       m.exdur,
       m.prsdur,
       m.postdur,
       m.rip AS remoteip,
       m.ts AS ts,
       m.dm AS devicemodel,
       m.os AS osversion,
       m.ua AS useragent,
       m.svcid AS serviceid,
	   m.psvcid AS parentserviceid,
       m.fid AS formid,
       m.stype AS sessiontype,
       m.kuid,
       m.country,
       m.region AS region,
       m.city,
       m.zip,
       m.lat,
       m.lon,
       m.dmacd,
       m.areacd,
       1 AS cnt,
       CASE
         WHEN m.chnl = 'desktop' THEN 'D'
         WHEN m.atype = 'hybrid' OR m.atype = 'spa' OR m.atype = 'mobileweb' THEN 'W'
         ELSE 'N'
       END AS usagetype,
       m.sdktype,
       m.sdkversion,
       m.opstatus,
       m.httpcode,
       m.errmsg,
       m.errstack_var,
       m.errstack,
       m.mfbaseid,
       m.mfaid,
       m.mfaname,
       m.svcgroup,
       m.psvcgroup as parentsvcgroup,
       m.rver,
       m.svcver,
       m.reqmapdur,
       m.respmapdur,
       m.oname,
       m.omethod,
       m.svctype,
       m.contype,
       m.xmode,
       m.trecords,
       m.reqtype,
       m.reqbytes,
       m.respbytes,
       m.reqprsdur,
       m.respprsdur,
       m.incnfdur,
       m.cnfcnt,
       m.iserror,
       m.sessiontype AS sessionCategory
FROM middleware_sub_requests m;

-- Creating a view for api_sub_requests
CREATE VIEW vw_api_sub_requests 
AS
SELECT kaid,
       eid AS environmentid,
       awsid,
       ebid,
       aid AS appid,
       aname AS appname,
       rid AS requestid,
       idur,
       tdur,
       rip AS remoteip,
       ts AS ts,
       svcid AS serviceid,
	   psvcid AS parentserviceid,
       stype AS sessiontype,
       country,
       region AS region,
       city,
       zip,
       lat,
       lon,
       dmacd,
       areacd,
       predur,
       exdur,
       prsdur,
       postdur,
       1 AS cnt,
       sdktype,
       sdkversion,
       opstatus,
       httpcode,
       errmsg,
       errstack_var,
       errstack,
       mfaid,
       mfbaseid,
       mfaname,
       svcgroup,
       psvcgroup as parentsvcgroup,
       svcver,
       rver,
       reqmapdur,
       respmapdur,
       oname,
       omethod,
       svctype,
       contype,
       trecords,
       reqtype,
       reqbytes,
       respbytes,
       reqprsdur,
       respprsdur,
       incnfdur,
       cnfcnt,
       iserror
FROM api_sub_requests;

-- Add unique constraint on request_key for api_request table
ALTER TABLE api_requests ADD CONSTRAINT uk_api_requests UNIQUE KEY (request_key);

COMMIT;