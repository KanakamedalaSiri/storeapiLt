DELIMITER ++
DROP PROCEDURE IF EXISTS CREATECOLUMNIFNOTEXISTS++

CREATE PROCEDURE CREATECOLUMNIFNOTEXISTS(TABLENAME VARCHAR(255), COLUMNNAME VARCHAR(255), DATATYPE VARCHAR(255), NOTNULL VARCHAR(255))
BEGIN
 /* create column if not exists */
 DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING BEGIN END;
 IF NOT EXISTS (SELECT * FROM information_schema.columns WHERE table_schema = '${KONY_REPORTS_DB}' and table_name = TABLENAME and column_name = COLUMNNAME) THEN
  SET @s = CONCAT("ALTER TABLE ", TABLENAME, " ADD COLUMN ", COLUMNNAME, " ", DATATYPE, " ", NOTNULL);
  PREPARE stmtd FROM @s;
  EXECUTE stmtd;
 END IF;
END++

DROP PROCEDURE IF EXISTS CREATESPATIALINDEXIFNOTEXISTS++

CREATE PROCEDURE CREATESPATIALINDEXIFNOTEXISTS(TABLENAME VARCHAR(255), INDEXNAME VARCHAR(255), COLUMNNAME VARCHAR(255))
BEGIN
 /* create index if not exists */
 DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING BEGIN END;
 IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.STATISTICS WHERE table_schema = '${KONY_REPORTS_DB}' and table_name = TABLENAME and index_name = INDEXNAME) THEN
  SET @s = CONCAT("ALTER TABLE ", TABLENAME, " ADD SPATIAL KEY ", INDEXNAME, " (", COLUMNNAME, ")");
  PREPARE stmtd FROM @s;
  EXECUTE stmtd;
 END IF;
END++

DELIMITER ;

DELIMITER ++

DROP PROCEDURE IF EXISTS DROPCOLUMNIFEXISTS++

CREATE PROCEDURE DROPCOLUMNIFEXISTS(TABLENAME VARCHAR(255), COLUMNNAME VARCHAR(255))
BEGIN
 /* delete column if it exists */
 IF EXISTS (SELECT * FROM information_schema.columns WHERE table_schema = '${KONY_REPORTS_DB}' and table_name = TABLENAME and column_name = COLUMNNAME) THEN
  SET @s = CONCAT("ALTER TABLE ", TABLENAME, " DROP COLUMN ", COLUMNNAME);
  PREPARE stmtd FROM @s;
  EXECUTE stmtd;
 END IF;
END++

DELIMITER ;

CALL DROPCOLUMNIFEXISTS('geolocations_ip4', 'IPSPATIAL');